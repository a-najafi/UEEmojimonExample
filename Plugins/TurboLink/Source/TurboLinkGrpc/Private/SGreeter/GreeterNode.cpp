//Generated by TurboLink CodeGenerator, do not edit!
#include "SGreeter/GreeterNode.h"
#include "SGreeter/GreeterService.h"
#include "TurboLinkGrpcManager.h"
#include "TurboLinkGrpcUtilities.h"

UCallGreeterServiceHello* UCallGreeterServiceHello::Hello(UObject* WorldContextObject, const FGrpcGreeterHelloRequest& Request)
{
	UCallGreeterServiceHello* node = NewObject<UCallGreeterServiceHello>(WorldContextObject);
	UTurboLinkGrpcManager* turboLinkManager = UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(WorldContextObject);

	node->GreeterService = Cast<UGreeterService>(turboLinkManager->MakeService("GreeterService"));
	if (node->GreeterService == nullptr)
	{
		return nullptr;
	}
	node->Request = Request;

	node->GreeterService->OnServiceStateChanged.AddUniqueDynamic(node, &UCallGreeterServiceHello::OnServiceStateChanged);
	WorldContextObject->GetWorld()->GetTimerManager().SetTimerForNextTick(FTimerDelegate::CreateLambda([node]() {
		node->GreeterService->Connect();
	}));
	return node;
}

void UCallGreeterServiceHello::OnServiceStateChanged(EGrpcServiceState NewState)
{
	if (NewState == EGrpcServiceState::TransientFailure)
	{
		FGrpcResult result;
		result.Code = EGrpcResultCode::ConnectionFailed;

		FGrpcGreeterHelloResponse response;
		OnFail.Broadcast(result, response);

		Shutdown();
		return;
	}

	if (NewState == EGrpcServiceState::Ready)
	{
		GreeterServiceClient = GreeterService->MakeClient();
		GreeterServiceClient->OnContextStateChange.AddUniqueDynamic(this, &UCallGreeterServiceHello::OnContextStateChange);
		GreeterServiceClient->OnHelloResponse.AddUniqueDynamic(this, &UCallGreeterServiceHello::OnResponse);

		Context = GreeterServiceClient->InitHello();
		GreeterServiceClient->Hello(Context, Request);
	}
}

void UCallGreeterServiceHello::OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State)
{
	if (State == EGrpcContextState::Done)
	{
		Shutdown();
	}
}

void UCallGreeterServiceHello::OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcGreeterHelloResponse& Response)
{
	if (Result.Code == EGrpcResultCode::Ok)
	{
		OnSuccess.Broadcast(Result, Response);
	}
	else
	{
		OnFail.Broadcast(Result, Response);
	}
}

void UCallGreeterServiceHello::Shutdown()
{
	GreeterService->OnServiceStateChanged.RemoveDynamic(this, &UCallGreeterServiceHello::OnServiceStateChanged);
	if (GreeterServiceClient != nullptr)
	{
		GreeterService->RemoveClient(GreeterServiceClient);
		GreeterServiceClient->Shutdown();
		GreeterServiceClient = nullptr;
	}

	if (GreeterService != nullptr)
	{
		UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(this)->ReleaseService(GreeterService);
		GreeterService = nullptr;
	}

	SetReadyToDestroy();
#if ENGINE_MAJOR_VERSION>=5
	MarkAsGarbage();
#else
	MarkPendingKill();
#endif
}
