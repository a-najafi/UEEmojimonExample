//Generated by TurboLink CodeGenerator, do not edit!
#pragma once

#include "SEcsrelay/EcsRelayService.h"
#include "TurboLinkGrpcManager_Private.h"
#include "ecs_relay.grpc.pb.h"
#include "EcsRelayService_Private.generated.h"

class UECSRelayService::Private
{
public:
	std::shared_ptr<UTurboLinkGrpcManager::Private::ServiceChannel> Channel;
	std::unique_ptr<::ecsrelay::ECSRelayService::Stub> Stub;
};

UCLASS()
class UECSRelayServiceAuthenticateLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayIdentity& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FAuthenticateLambda Lambda;
};

UCLASS()
class UECSRelayServiceRevokeLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayIdentity& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FRevokeLambda Lambda;
};

UCLASS()
class UECSRelayServicePingLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayIdentity& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FPingLambda Lambda;
};

UCLASS()
class UECSRelayServiceCountAuthenticatedLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayCountIdentitiesResponse& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FCountAuthenticatedLambda Lambda;
};

UCLASS()
class UECSRelayServiceCountConnectedLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayCountIdentitiesResponse& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FCountConnectedLambda Lambda;
};

UCLASS()
class UECSRelayServiceSubscribeLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelaySubscription& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FSubscribeLambda Lambda;
};

UCLASS()
class UECSRelayServiceUnsubscribeLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelaySubscription& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FUnsubscribeLambda Lambda;
};

UCLASS()
class UECSRelayServiceOpenStreamLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayMessage& Response);
	UFUNCTION()
	void OnContextStateChanged(FGrpcContextHandle Handle, EGrpcContextState NewState);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FOpenStreamLambda Lambda;
};

UCLASS()
class UECSRelayServicePushLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayPushResponse& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FPushLambda Lambda;
};

UCLASS()
class UECSRelayServiceMinBalanceForPushLambdaWrapper : public UObject
{
	GENERATED_BODY()
public:
	UPROPERTY()
	UECSRelayServiceClient* InnerClient;

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& Result, const FGrpcEcsrelayBalanceResponse& Response);
public:
	FGrpcContextHandle Handle;
	UECSRelayService::FMinBalanceForPushLambda Lambda;
};

