//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SEcssnapshot/EcsSnapshotClient.h"
#include "EcsSnapshotService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UECSStateSnapshotService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable)
	UECSStateSnapshotServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UECSStateSnapshotServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestLambda;
	void CallGetStateLatest(const FGrpcEcssnapshotECSStateRequestLatest& Request, FGetStateLatestLambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestStreamLambda;
	void CallGetStateLatestStream(const FGrpcEcssnapshotECSStateRequestLatestStream& Request, FGetStateLatestStreamLambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReplyV2& Response)> FGetStateLatestStreamV2Lambda;
	void CallGetStateLatestStreamV2(const FGrpcEcssnapshotECSStateRequestLatestStream& Request, FGetStateLatestStreamV2Lambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateLatestStreamPrunedLambda;
	void CallGetStateLatestStreamPruned(const FGrpcEcssnapshotECSStateRequestLatestStreamPruned& Request, FGetStateLatestStreamPrunedLambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReplyV2& Response)> FGetStateLatestStreamPrunedV2Lambda;
	void CallGetStateLatestStreamPrunedV2(const FGrpcEcssnapshotECSStateRequestLatestStreamPruned& Request, FGetStateLatestStreamPrunedV2Lambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateBlockReply& Response)> FGetStateBlockLatestLambda;
	void CallGetStateBlockLatest(const FGrpcEcssnapshotECSStateBlockRequestLatest& Request, FGetStateBlockLatestLambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotECSStateReply& Response)> FGetStateAtBlockLambda;
	void CallGetStateAtBlock(const FGrpcEcssnapshotECSStateRequestAtBlock& Request, FGetStateAtBlockLambda Lambda);

	typedef TFunction<void(const FGrpcResult& Result, const FGrpcEcssnapshotWorlds& Response)> FGetWorldsLambda;
	void CallGetWorlds(const FGrpcEcssnapshotWorldsRequest& Request, FGetWorldsLambda Lambda);

public:
	class Private;
	Private* const d = nullptr;

public:
	UECSStateSnapshotService();
	virtual ~UECSStateSnapshotService();
};

